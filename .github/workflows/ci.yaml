name: CI Stage

on:
  push:
    branches: [ main ]

jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: xcc_backupmanager
      PROJECT_ID: bootcamp-backup-cormac
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: 'google-github-actions/auth@v0'
      with:
       credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

    - name: Build Docker Image
      run: docker build -t $IMAGE_NAME:latest .
    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker europe-west1-docker.pkg.dev --quiet

    - name: Push Docker Image to Artifact Registry
      env:
        GIT_TAG: v0.1.0
      run: |-
        docker tag $IMAGE_NAME:latest europe-west1-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
        docker push europe-west1-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest

  test:
    runs-on: ubuntu-latest
    needs: build-push-gcr
    env:
      IMAGE_NAME: xcc_backupmanager
      PROJECT_ID: bootcamp-backup-cormac
    steps:
    - uses: actions/checkout@v2
      uses: 'google-github-actions/auth@v0'
      with:
       credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}
    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker europe-west1-docker.pkg.dev --quiet

    - name: test
      run: |
        docker pull europe-west1-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
        docker build -f Dockerfile.test --build-arg BASE_IMAGE=europe-west1-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest .

  deploy:
    runs-on: ubuntu-latest
    needs: test
    env:
      IMAGE_NAME: xcc_backupmanager
      PROJECT_ID: bootcamp-backup-cormac
    steps:
    - name: 'Authenticate to Google Cloud'
    - uses: 'google-github-actions/auth@v0'
      with:
       credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}
    - name: 'deploys to cloud run'
      uses: 'google-github-actions/deploy-cloudrun@v0'
      with:
        service: 'backup-manager'
        image: europe-west1-docker.pkg.dev/$ {{PROJECT_ID }}/images/$ {{ IMAGE_NAME }}:latest
        project_id: ${{ env.PROJECT_ID }}
